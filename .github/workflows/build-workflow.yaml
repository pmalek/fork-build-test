name: Reusable build

on:
  workflow_call:
    secrets:
      token:
        description: Token to use for loging in to the registry
        required: false

    inputs:
      registry:
        description: Registry to use for image(s) naming and pushing.
        required: false
        type: string
      image-name:
        description: Image name to use for image(s) naming and pushing.
        required: true
        type: string

      push:
        description: Indicates whether to push the built image(s) to specified registry.
        required: true
        type: boolean
      file:
        description: The name of the Dockefile to use.
        required: false
        type: string
        default: Dockerfile
      target:
        description: The target to be built.
        required: false
        type: string
        default: distroless
      outputs:
        description: Set outputs for docker/build-push-action.
        required: false
        type: string
      upload-artifact:
        description: |
          If a non empty string is provided then this will be used as path for
          artifact to upload, which will contain the built, exported container image.
          This artifact will be available for subsequent jobs under the name
          of "image".
        required: false
        type: string

    outputs:
      tags:
        value: ${{ jobs.build.outputs.tags }}
      version:
        value: ${{ jobs.build.outputs.version }}
      artifact:
        value: ${{ jobs.build.outputs.artifact }}
    
jobs:
  build:
    name: Build image(s)
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
        # Whatever gets changed here should be changed in the multi-arch job below.
        - linux/amd64
        - linux/arm64

    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      version: ${{ steps.meta.outputs.version }}
      artifact: ${{ steps.set-artifact.outputs.artifact }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        if: ${{ inputs.push }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.token }}
 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          labels: |
            org.opencontainers.image.title=KongGatewayOperator
          #${{ inputs.registry }}/
          images: |
            ${{ inputs.image-name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
          # avoid overwriting the latest tag because metadata-action does not
          # add a suffix to it
          flavor: latest=false,suffix=-${{ matrix.platform }}

      - uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ inputs.push }}
          file: ${{ inputs.file }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          target: ${{ inputs.target }}
          platforms: ${{ matrix.platform }}
          build-args: |
            TAG=${{ steps.meta.outputs.version }}
            COMMIT=${{ github.sha }}
            REPO_INFO=https://github.com/${{ github.repository }}.git
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: ${{ inputs.outputs }}

      - name: Upload artifact
        if: ${{ inputs.upload-artifact }}
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: ${{ inputs.upload-artifact }}

      - name: Set artifact output
        if: ${{ inputs.upload-artifact }}
        id: set-artifact
        run: echo "artifact=${{ inputs.upload-artifact }}" >> $GITHUB_OUTPUT


  build-multi-arch:
    name: Build multi-arch manifest
    runs-on: ubuntu-latest
    if: ${{ inputs.push }}

    needs:
      - build

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/metadata-action@v5.0.0
        id: metadata
        with:
          images: ${{ inputs.image-name }}

      - name: Log in to the Container registry
        if: ${{ inputs.push }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.token }}

      - uses: int128/docker-manifest-create-action@v1
        with:
          tags: ${{ steps.metadata.outputs.tags }}
          suffixes: |
            -linux-amd64
            -linux-arm64